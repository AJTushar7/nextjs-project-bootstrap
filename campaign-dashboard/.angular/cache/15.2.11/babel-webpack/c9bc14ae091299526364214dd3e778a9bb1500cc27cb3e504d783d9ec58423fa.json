{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/dashboard-data.service\";\nimport * as i2 from \"@angular/common\";\nconst _c0 = function (a0, a1) {\n  return {\n    \"text-green-600\": a0,\n    \"text-red-600\": a1\n  };\n};\nfunction DashboardComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 31)(1, \"div\", 32);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 33);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 34);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const card_r5 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(card_r5.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(card_r5.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(5, _c0, card_r5.change >= 0, card_r5.change < 0));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", card_r5.change >= 0 ? \"+\" : \"\", \"\", card_r5.change, \"% \");\n  }\n}\nfunction DashboardComponent_option_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 35);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const option_r6 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r6.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(option_r6.label);\n  }\n}\nfunction DashboardComponent_option_56_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 35);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const status_r7 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", status_r7);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(status_r7);\n  }\n}\nfunction DashboardComponent_div_57_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 38)(1, \"h4\", 39);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"p\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 40)(10, \"button\", 41);\n    i0.ɵɵtext(11, \"Pause\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"button\", 42);\n    i0.ɵɵtext(13, \"Resume\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"button\", 43);\n    i0.ɵɵtext(15, \"Edit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"button\", 44);\n    i0.ɵɵtext(17, \"Duplicate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"button\", 45);\n    i0.ɵɵtext(19, \"Report\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const campaign_r9 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(campaign_r9.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Status: \", campaign_r9.status, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Start Date: \", campaign_r9.startDate, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"End Date: \", campaign_r9.endDate, \"\");\n  }\n}\nfunction DashboardComponent_div_57_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 36);\n    i0.ɵɵtemplate(1, DashboardComponent_div_57_div_1_Template, 20, 4, \"div\", 37);\n    i0.ɵɵpipe(2, \"slice\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind3(2, 1, ctx_r3.filteredCampaigns, ctx_r3.cardViewStart, ctx_r3.cardViewStart + 3));\n  }\n}\nfunction DashboardComponent_div_58_tr_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 49);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\", 49);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\", 49);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\", 49);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\", 49)(10, \"button\", 51);\n    i0.ɵɵtext(11, \"Pause\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"button\", 52);\n    i0.ɵɵtext(13, \"Resume\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"button\", 53);\n    i0.ɵɵtext(15, \"Edit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"button\", 54);\n    i0.ɵɵtext(17, \"Duplicate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"button\", 45);\n    i0.ɵɵtext(19, \"Report\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const campaign_r11 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(campaign_r11.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(campaign_r11.status);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(campaign_r11.startDate);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(campaign_r11.endDate);\n  }\n}\nfunction DashboardComponent_div_58_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 46)(1, \"table\", 47)(2, \"thead\")(3, \"tr\", 48)(4, \"th\", 49);\n    i0.ɵɵtext(5, \"Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"th\", 49);\n    i0.ɵɵtext(7, \"Status\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"th\", 49);\n    i0.ɵɵtext(9, \"Start Date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"th\", 49);\n    i0.ɵɵtext(11, \"End Date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"th\", 49);\n    i0.ɵɵtext(13, \"Actions\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(14, \"tbody\");\n    i0.ɵɵtemplate(15, DashboardComponent_div_58_tr_15_Template, 20, 4, \"tr\", 50);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(15);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.filteredCampaigns);\n  }\n}\nconst _c1 = function (a0) {\n  return {\n    \"background-color\": a0\n  };\n};\nconst _c2 = function (a0) {\n  return {\n    \"bg-blue-600 text-white\": a0\n  };\n};\nexport class DashboardComponent {\n  constructor(dashboardService) {\n    this.dashboardService = dashboardService;\n    this.errorMessage = '';\n    this.startDate = '';\n    this.endDate = '';\n    this.maxDate = '';\n    this.kpiCards = [{\n      title: 'Total Revenue',\n      value: '$1.2M',\n      change: 5.4\n    }, {\n      title: 'Campaign ROI',\n      value: '350%',\n      change: 3.2\n    }, {\n      title: 'Messages Sent',\n      value: '1.5M',\n      change: -1.1\n    }, {\n      title: 'Avg Conversion Rate',\n      value: '4.5%',\n      change: 0.8\n    }];\n    this.selectedCriteria = 'sent';\n    this.criteriaOptions = [{\n      label: 'Sent',\n      value: 'sent'\n    }, {\n      label: 'Delivered',\n      value: 'delivered'\n    }];\n    this.viewMode = 'card';\n    this.statusOptions = ['Active', 'Paused', 'Completed'];\n    this.selectedStatus = '';\n    this.cardViewStart = 0;\n  }\n  ngOnInit() {\n    try {\n      this.channelData = this.dashboardService.getChannelPerformance();\n      this.engagementMetrics = this.dashboardService.getEngagementMetrics();\n      this.budgetMetrics = this.dashboardService.getBudgetMetrics();\n      this.campaignEvents = this.dashboardService.getCampaignEvents();\n      // Initialize date range to last 7 days\n      const today = new Date();\n      this.maxDate = today.toISOString().split('T')[0];\n      const priorDate = new Date().setDate(today.getDate() - 7);\n      this.startDate = new Date(priorDate).toISOString().split('T')[0];\n      this.endDate = this.maxDate;\n      this.updateChannelChart();\n    } catch (error) {\n      this.errorMessage = 'An error occurred while loading dashboard data.';\n      console.error(error);\n    }\n  }\n  updateChannelChart() {\n    if (!this.channelData) return;\n    const dataKey = this.selectedCriteria === 'sent' ? 'Sent' : 'Delivered';\n    this.channelChartData = {\n      labels: this.channelData.labels,\n      datasets: [{\n        label: dataKey,\n        backgroundColor: this.selectedCriteria === 'sent' ? '#42A5F5' : '#66BB6A',\n        data: this.selectedCriteria === 'sent' ? this.channelData.datasets[0].data : this.channelData.datasets[1].data\n      }]\n    };\n    this.channelChartOptions = {\n      indexAxis: 'y',\n      responsive: true,\n      plugins: {\n        legend: {\n          display: true,\n          position: 'top'\n        },\n        tooltip: {\n          enabled: true\n        }\n      },\n      scales: {\n        x: {\n          beginAtZero: true\n        }\n      }\n    };\n  }\n  onCriteriaChange() {\n    this.updateChannelChart();\n  }\n  getHeatmapColor(value) {\n    if (value >= 75) {\n      return '#34D399'; // green\n    } else if (value >= 50) {\n      return '#FBBF24'; // yellow\n    } else {\n      return '#F87171'; // red\n    }\n  }\n\n  get filteredCampaigns() {\n    if (!this.campaignEvents) return [];\n    if (!this.selectedStatus) return this.campaignEvents;\n    return this.campaignEvents.filter(c => c.status === this.selectedStatus);\n  }\n  setViewMode(mode) {\n    this.viewMode = mode;\n  }\n  prevCardView() {\n    if (this.cardViewStart > 0) {\n      this.cardViewStart -= 1;\n    }\n  }\n  nextCardView() {\n    if (this.cardViewStart + 3 < this.filteredCampaigns.length) {\n      this.cardViewStart += 1;\n    }\n  }\n  onDateChange() {\n    // Validate date range max 15 days\n    if (this.startDate && this.endDate) {\n      const start = new Date(this.startDate);\n      const end = new Date(this.endDate);\n      const diffTime = Math.abs(end.getTime() - start.getTime());\n      const diffDays = diffTime / (1000 * 60 * 60 * 24);\n      if (diffDays > 15) {\n        alert('Date range cannot exceed 15 days.');\n        // Reset endDate to startDate + 15 days or today\n        const maxEnd = new Date(start);\n        maxEnd.setDate(start.getDate() + 15);\n        this.endDate = maxEnd > new Date() ? new Date().toISOString().split('T')[0] : maxEnd.toISOString().split('T')[0];\n      }\n    }\n    // TODO: Refresh data based on new date range\n  }\n\n  createCampaign() {\n    alert('Create Campaign button clicked!');\n    // TODO: Implement create campaign functionality\n  }\n\n  static {\n    this.ɵfac = function DashboardComponent_Factory(t) {\n      return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.DashboardDataService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: DashboardComponent,\n      selectors: [[\"app-dashboard\"]],\n      decls: 64,\n      vars: 34,\n      consts: [[1, \"top-bar\", \"p-4\", \"flex\", \"items-center\", \"justify-between\", \"border-b\", \"border-gray-300\"], [1, \"date-range-selector\"], [\"for\", \"dateRange\", 1, \"mr-2\", \"font-semibold\"], [\"type\", \"date\", \"id\", \"startDate\", \"name\", \"startDate\", \"max\", \"\", 1, \"border\", \"border-gray-400\", \"rounded\", \"px-2\", \"py-1\", \"mr-2\", 3, \"value\", \"max\", \"change\"], [\"type\", \"date\", \"id\", \"endDate\", \"name\", \"endDate\", \"max\", \"\", 1, \"border\", \"border-gray-400\", \"rounded\", \"px-2\", \"py-1\", \"ml-2\", 3, \"value\", \"min\", \"max\", \"change\"], [1, \"create-campaign-btn\", \"bg-blue-600\", \"text-white\", \"px-4\", \"py-2\", \"rounded\", \"hover:bg-blue-700\", \"transition\", 3, \"click\"], [1, \"kpi-cards\", \"flex\", \"space-x-4\", \"p-4\"], [\"class\", \"kpi-card bg-white shadow rounded p-4 flex-1 text-center\", 4, \"ngFor\", \"ngForOf\"], [1, \"channel-performance\", \"p-4\", \"bg-white\", \"rounded\", \"shadow\"], [1, \"flex\", \"items-center\", \"justify-between\", \"mb-4\"], [1, \"text-lg\", \"font-semibold\"], [1, \"mr-2\", \"font-medium\"], [1, \"border\", \"border-gray-300\", \"rounded\", \"px-2\", \"py-1\", 3, \"ngModel\", \"ngModelChange\", \"change\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"bar\", 3, \"data\", \"options\"], [1, \"engagement-heatmap\", \"p-4\", \"bg-white\", \"rounded\", \"shadow\", \"mt-6\"], [1, \"text-lg\", \"font-semibold\", \"mb-4\"], [1, \"grid\", \"grid-cols-3\", \"gap-4\", \"text-center\"], [1, \"heatmap-cell\", \"p-4\", \"rounded\", 3, \"ngStyle\"], [1, \"font-semibold\"], [1, \"text-2xl\"], [1, \"real-time-monitoring\", \"p-4\", \"bg-white\", \"rounded\", \"shadow\", \"mt-6\"], [1, \"mr-2\", \"px-3\", \"py-1\", \"rounded\", \"border\", 3, \"ngClass\", \"click\"], [1, \"px-3\", \"py-1\", \"rounded\", \"border\", 3, \"ngClass\", \"click\"], [1, \"filters\", \"mb-4\", \"flex\", \"space-x-4\"], [1, \"border\", \"border-gray-300\", \"rounded\", \"px-2\", \"py-1\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"\"], [\"class\", \"card-view flex space-x-4 overflow-x-auto\", 4, \"ngIf\"], [\"class\", \"table-view overflow-x-auto\", 4, \"ngIf\"], [1, \"mt-4\", \"flex\", \"justify-between\"], [1, \"px-3\", \"py-1\", \"bg-gray-300\", \"rounded\", \"hover:bg-gray-400\", 3, \"disabled\", \"click\"], [1, \"kpi-card\", \"bg-white\", \"shadow\", \"rounded\", \"p-4\", \"flex-1\", \"text-center\"], [1, \"kpi-title\", \"font-semibold\", \"text-gray-700\", \"mb-2\"], [1, \"kpi-value\", \"text-2xl\", \"font-bold\", \"text-gray-900\"], [1, \"kpi-change\", \"mt-1\", 3, \"ngClass\"], [3, \"value\"], [1, \"card-view\", \"flex\", \"space-x-4\", \"overflow-x-auto\"], [\"class\", \"campaign-card bg-gray-100 rounded p-4 min-w-[300px] shadow\", 4, \"ngFor\", \"ngForOf\"], [1, \"campaign-card\", \"bg-gray-100\", \"rounded\", \"p-4\", \"min-w-[300px]\", \"shadow\"], [1, \"font-semibold\", \"mb-2\"], [1, \"mt-4\", \"flex\", \"space-x-2\"], [1, \"px-2\", \"py-1\", \"bg-yellow-400\", \"rounded\", \"hover:bg-yellow-500\"], [1, \"px-2\", \"py-1\", \"bg-green-400\", \"rounded\", \"hover:bg-green-500\"], [1, \"px-2\", \"py-1\", \"bg-blue-400\", \"rounded\", \"hover:bg-blue-500\"], [1, \"px-2\", \"py-1\", \"bg-gray-400\", \"rounded\", \"hover:bg-gray-500\"], [1, \"px-2\", \"py-1\", \"bg-red-400\", \"rounded\", \"hover:bg-red-500\"], [1, \"table-view\", \"overflow-x-auto\"], [1, \"min-w-full\", \"border\", \"border-gray-300\", \"rounded\"], [1, \"bg-gray-200\"], [1, \"border\", \"border-gray-300\", \"px-4\", \"py-2\"], [4, \"ngFor\", \"ngForOf\"], [1, \"mr-1\", \"px-2\", \"py-1\", \"bg-yellow-400\", \"rounded\", \"hover:bg-yellow-500\"], [1, \"mr-1\", \"px-2\", \"py-1\", \"bg-green-400\", \"rounded\", \"hover:bg-green-500\"], [1, \"mr-1\", \"px-2\", \"py-1\", \"bg-blue-400\", \"rounded\", \"hover:bg-blue-500\"], [1, \"mr-1\", \"px-2\", \"py-1\", \"bg-gray-400\", \"rounded\", \"hover:bg-gray-500\"]],\n      template: function DashboardComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"label\", 2);\n          i0.ɵɵtext(3, \"Date Range:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"input\", 3);\n          i0.ɵɵlistener(\"change\", function DashboardComponent_Template_input_change_4_listener() {\n            return ctx.onDateChange();\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(5, \" to \");\n          i0.ɵɵelementStart(6, \"input\", 4);\n          i0.ɵɵlistener(\"change\", function DashboardComponent_Template_input_change_6_listener() {\n            return ctx.onDateChange();\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(7, \"button\", 5);\n          i0.ɵɵlistener(\"click\", function DashboardComponent_Template_button_click_7_listener() {\n            return ctx.createCampaign();\n          });\n          i0.ɵɵtext(8, \" Create Campaign \");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(9, \"div\", 6);\n          i0.ɵɵtemplate(10, DashboardComponent_div_10_Template, 7, 8, \"div\", 7);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"div\", 8)(12, \"div\", 9)(13, \"h3\", 10);\n          i0.ɵɵtext(14, \"Channel Performance\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(15, \"div\")(16, \"label\", 11);\n          i0.ɵɵtext(17, \"Criteria:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(18, \"select\", 12);\n          i0.ɵɵlistener(\"ngModelChange\", function DashboardComponent_Template_select_ngModelChange_18_listener($event) {\n            return ctx.selectedCriteria = $event;\n          })(\"change\", function DashboardComponent_Template_select_change_18_listener() {\n            return ctx.onCriteriaChange();\n          });\n          i0.ɵɵtemplate(19, DashboardComponent_option_19_Template, 2, 2, \"option\", 13);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelement(20, \"p-chart\", 14);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(21, \"div\", 15)(22, \"h3\", 16);\n          i0.ɵɵtext(23, \"Engagement Heatmap\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(24, \"div\", 17)(25, \"div\", 18)(26, \"div\", 19);\n          i0.ɵɵtext(27, \"Open Rate\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(28, \"div\", 20);\n          i0.ɵɵtext(29);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(30, \"div\", 18)(31, \"div\", 19);\n          i0.ɵɵtext(32, \"Click Rate\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(33, \"div\", 20);\n          i0.ɵɵtext(34);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(35, \"div\", 18)(36, \"div\", 19);\n          i0.ɵɵtext(37, \"Conversion Rate\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(38, \"div\", 20);\n          i0.ɵɵtext(39);\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(40, \"div\", 21)(41, \"div\", 9)(42, \"h3\", 10);\n          i0.ɵɵtext(43, \"Real-Time Campaign Monitoring\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(44, \"div\")(45, \"button\", 22);\n          i0.ɵɵlistener(\"click\", function DashboardComponent_Template_button_click_45_listener() {\n            return ctx.setViewMode(\"card\");\n          });\n          i0.ɵɵtext(46, \" Card View \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(47, \"button\", 23);\n          i0.ɵɵlistener(\"click\", function DashboardComponent_Template_button_click_47_listener() {\n            return ctx.setViewMode(\"table\");\n          });\n          i0.ɵɵtext(48, \" Table View \");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(49, \"div\", 24)(50, \"div\")(51, \"label\", 11);\n          i0.ɵɵtext(52, \"Status:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(53, \"select\", 25);\n          i0.ɵɵlistener(\"ngModelChange\", function DashboardComponent_Template_select_ngModelChange_53_listener($event) {\n            return ctx.selectedStatus = $event;\n          });\n          i0.ɵɵelementStart(54, \"option\", 26);\n          i0.ɵɵtext(55, \"All\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(56, DashboardComponent_option_56_Template, 2, 2, \"option\", 13);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵtemplate(57, DashboardComponent_div_57_Template, 3, 5, \"div\", 27);\n          i0.ɵɵtemplate(58, DashboardComponent_div_58_Template, 16, 1, \"div\", 28);\n          i0.ɵɵelementStart(59, \"div\", 29)(60, \"button\", 30);\n          i0.ɵɵlistener(\"click\", function DashboardComponent_Template_button_click_60_listener() {\n            return ctx.prevCardView();\n          });\n          i0.ɵɵtext(61, \" < Prev \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(62, \"button\", 30);\n          i0.ɵɵlistener(\"click\", function DashboardComponent_Template_button_click_62_listener() {\n            return ctx.nextCardView();\n          });\n          i0.ɵɵtext(63, \" Next > \");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"value\", ctx.startDate)(\"max\", ctx.endDate);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"value\", ctx.endDate)(\"min\", ctx.startDate)(\"max\", ctx.maxDate);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngForOf\", ctx.kpiCards);\n          i0.ɵɵadvance(8);\n          i0.ɵɵproperty(\"ngModel\", ctx.selectedCriteria);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngForOf\", ctx.criteriaOptions);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"data\", ctx.channelChartData)(\"options\", ctx.channelChartOptions);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(24, _c1, ctx.getHeatmapColor(ctx.engagementMetrics.openRate)));\n          i0.ɵɵadvance(4);\n          i0.ɵɵtextInterpolate1(\"\", ctx.engagementMetrics.openRate, \"%\");\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(26, _c1, ctx.getHeatmapColor(ctx.engagementMetrics.clickRate)));\n          i0.ɵɵadvance(4);\n          i0.ɵɵtextInterpolate1(\"\", ctx.engagementMetrics.clickRate, \"%\");\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(28, _c1, ctx.getHeatmapColor(ctx.engagementMetrics.conversionRate)));\n          i0.ɵɵadvance(4);\n          i0.ɵɵtextInterpolate1(\"\", ctx.engagementMetrics.conversionRate, \"%\");\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(30, _c2, ctx.viewMode === \"card\"));\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(32, _c2, ctx.viewMode === \"table\"));\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"ngModel\", ctx.selectedStatus);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngForOf\", ctx.statusOptions);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.viewMode === \"card\");\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.viewMode === \"table\");\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"disabled\", ctx.cardViewStart === 0);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"disabled\", ctx.cardViewStart + 3 >= ctx.filteredCampaigns.length);\n        }\n      },\n      dependencies: [i2.NgClass, i2.NgForOf, i2.NgIf, i2.NgStyle, i2.SlicePipe],\n      styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"],\n      changeDetection: 0\n    });\n  }\n}","map":{"version":3,"mappings":"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","names":["i0","DashboardComponent","constructor","dashboardService","title","value","change","label","ngOnInit","channelData","getChannelPerformance","engagementMetrics","getEngagementMetrics","budgetMetrics","getBudgetMetrics","campaignEvents","getCampaignEvents","today","Date","maxDate","toISOString","split","priorDate","setDate","getDate","startDate","endDate","updateChannelChart","error","errorMessage","console","dataKey","selectedCriteria","channelChartData","labels","datasets","backgroundColor","data","channelChartOptions","indexAxis","responsive","plugins","legend","display","position","tooltip","enabled","scales","x","beginAtZero","onCriteriaChange","getHeatmapColor","filteredCampaigns","selectedStatus","filter","c","status","setViewMode","mode","viewMode","prevCardView","cardViewStart","nextCardView","length","onDateChange","start","end","diffTime","Math","abs","getTime","diffDays","alert","maxEnd","createCampaign","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/project/sandbox/user-workspace/campaign-dashboard/src/app/components/dashboard/dashboard.component.html","/project/sandbox/user-workspace/campaign-dashboard/src/app/components/dashboard/dashboard.component.ts"],"sourcesContent":["<div class=\"top-bar p-4 flex items-center justify-between border-b border-gray-300\">\n  <div class=\"date-range-selector\">\n    <label for=\"dateRange\" class=\"mr-2 font-semibold\">Date Range:</label>\n    <input\n      type=\"date\"\n      id=\"startDate\"\n      name=\"startDate\"\n      max=\"\"\n      class=\"border border-gray-400 rounded px-2 py-1 mr-2\"\n      (change)=\"onDateChange()\"\n      [value]=\"startDate\"\n      [max]=\"endDate\"\n    />\n    to\n    <input\n      type=\"date\"\n      id=\"endDate\"\n      name=\"endDate\"\n      max=\"\"\n      class=\"border border-gray-400 rounded px-2 py-1 ml-2\"\n      (change)=\"onDateChange()\"\n      [value]=\"endDate\"\n      [min]=\"startDate\"\n      [max]=\"maxDate\"\n    />\n  </div>\n  <button\n    class=\"create-campaign-btn bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700 transition\"\n    (click)=\"createCampaign()\"\n  >\n    Create Campaign\n  </button>\n</div>\n\n<!-- KPI Cards Row -->\n<div class=\"kpi-cards flex space-x-4 p-4\">\n  <div\n    *ngFor=\"let card of kpiCards\"\n    class=\"kpi-card bg-white shadow rounded p-4 flex-1 text-center\"\n  >\n    <div class=\"kpi-title font-semibold text-gray-700 mb-2\">{{ card.title }}</div>\n    <div class=\"kpi-value text-2xl font-bold text-gray-900\">{{ card.value }}</div>\n    <div\n      class=\"kpi-change mt-1\"\n      [ngClass]=\"{\n        'text-green-600': card.change >= 0,\n        'text-red-600': card.change < 0\n      }\"\n    >\n      {{ card.change >= 0 ? '+' : '' }}{{ card.change }}%\n    </div>\n  </div>\n</div>\n\n<!-- Channel Performance Bar Chart -->\n<div class=\"channel-performance p-4 bg-white rounded shadow\">\n  <div class=\"flex items-center justify-between mb-4\">\n    <h3 class=\"text-lg font-semibold\">Channel Performance</h3>\n    <div>\n      <label class=\"mr-2 font-medium\">Criteria:</label>\n      <select [(ngModel)]=\"selectedCriteria\" (change)=\"onCriteriaChange()\" class=\"border border-gray-300 rounded px-2 py-1\">\n        <option *ngFor=\"let option of criteriaOptions\" [value]=\"option.value\">{{ option.label }}</option>\n      </select>\n    </div>\n  </div>\n  <p-chart type=\"bar\" [data]=\"channelChartData\" [options]=\"channelChartOptions\"></p-chart>\n</div>\n\n<!-- Engagement Heatmap -->\n<div class=\"engagement-heatmap p-4 bg-white rounded shadow mt-6\">\n  <h3 class=\"text-lg font-semibold mb-4\">Engagement Heatmap</h3>\n  <div class=\"grid grid-cols-3 gap-4 text-center\">\n    <div\n      class=\"heatmap-cell p-4 rounded\"\n      [ngStyle]=\"{ 'background-color': getHeatmapColor(engagementMetrics.openRate) }\"\n    >\n      <div class=\"font-semibold\">Open Rate</div>\n      <div class=\"text-2xl\">{{ engagementMetrics.openRate }}%</div>\n    </div>\n    <div\n      class=\"heatmap-cell p-4 rounded\"\n      [ngStyle]=\"{ 'background-color': getHeatmapColor(engagementMetrics.clickRate) }\"\n    >\n      <div class=\"font-semibold\">Click Rate</div>\n      <div class=\"text-2xl\">{{ engagementMetrics.clickRate }}%</div>\n    </div>\n    <div\n      class=\"heatmap-cell p-4 rounded\"\n      [ngStyle]=\"{ 'background-color': getHeatmapColor(engagementMetrics.conversionRate) }\"\n    >\n      <div class=\"font-semibold\">Conversion Rate</div>\n      <div class=\"text-2xl\">{{ engagementMetrics.conversionRate }}%</div>\n    </div>\n  </div>\n</div>\n\n<!-- Real-Time Campaign Monitoring -->\n<div class=\"real-time-monitoring p-4 bg-white rounded shadow mt-6\">\n  <div class=\"flex items-center justify-between mb-4\">\n    <h3 class=\"text-lg font-semibold\">Real-Time Campaign Monitoring</h3>\n    <div>\n      <button\n        class=\"mr-2 px-3 py-1 rounded border\"\n        [ngClass]=\"{ 'bg-blue-600 text-white': viewMode === 'card' }\"\n        (click)=\"setViewMode('card')\"\n      >\n        Card View\n      </button>\n      <button\n        class=\"px-3 py-1 rounded border\"\n        [ngClass]=\"{ 'bg-blue-600 text-white': viewMode === 'table' }\"\n        (click)=\"setViewMode('table')\"\n      >\n        Table View\n      </button>\n    </div>\n  </div>\n\n  <div class=\"filters mb-4 flex space-x-4\">\n    <div>\n      <label class=\"mr-2 font-medium\">Status:</label>\n      <select [(ngModel)]=\"selectedStatus\" class=\"border border-gray-300 rounded px-2 py-1\">\n        <option value=\"\">All</option>\n        <option *ngFor=\"let status of statusOptions\" [value]=\"status\">{{ status }}</option>\n      </select>\n    </div>\n  </div>\n\n  <div *ngIf=\"viewMode === 'card'\" class=\"card-view flex space-x-4 overflow-x-auto\">\n    <div\n      *ngFor=\"let campaign of filteredCampaigns | slice: cardViewStart:cardViewStart + 3\"\n      class=\"campaign-card bg-gray-100 rounded p-4 min-w-[300px] shadow\"\n    >\n      <h4 class=\"font-semibold mb-2\">{{ campaign.name }}</h4>\n      <p>Status: {{ campaign.status }}</p>\n      <p>Start Date: {{ campaign.startDate }}</p>\n      <p>End Date: {{ campaign.endDate }}</p>\n      <div class=\"mt-4 flex space-x-2\">\n        <button class=\"px-2 py-1 bg-yellow-400 rounded hover:bg-yellow-500\">Pause</button>\n        <button class=\"px-2 py-1 bg-green-400 rounded hover:bg-green-500\">Resume</button>\n        <button class=\"px-2 py-1 bg-blue-400 rounded hover:bg-blue-500\">Edit</button>\n        <button class=\"px-2 py-1 bg-gray-400 rounded hover:bg-gray-500\">Duplicate</button>\n        <button class=\"px-2 py-1 bg-red-400 rounded hover:bg-red-500\">Report</button>\n      </div>\n    </div>\n  </div>\n\n  <div *ngIf=\"viewMode === 'table'\" class=\"table-view overflow-x-auto\">\n    <table class=\"min-w-full border border-gray-300 rounded\">\n      <thead>\n        <tr class=\"bg-gray-200\">\n          <th class=\"border border-gray-300 px-4 py-2\">Name</th>\n          <th class=\"border border-gray-300 px-4 py-2\">Status</th>\n          <th class=\"border border-gray-300 px-4 py-2\">Start Date</th>\n          <th class=\"border border-gray-300 px-4 py-2\">End Date</th>\n          <th class=\"border border-gray-300 px-4 py-2\">Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let campaign of filteredCampaigns\">\n          <td class=\"border border-gray-300 px-4 py-2\">{{ campaign.name }}</td>\n          <td class=\"border border-gray-300 px-4 py-2\">{{ campaign.status }}</td>\n          <td class=\"border border-gray-300 px-4 py-2\">{{ campaign.startDate }}</td>\n          <td class=\"border border-gray-300 px-4 py-2\">{{ campaign.endDate }}</td>\n          <td class=\"border border-gray-300 px-4 py-2\">\n            <button class=\"mr-1 px-2 py-1 bg-yellow-400 rounded hover:bg-yellow-500\">Pause</button>\n            <button class=\"mr-1 px-2 py-1 bg-green-400 rounded hover:bg-green-500\">Resume</button>\n            <button class=\"mr-1 px-2 py-1 bg-blue-400 rounded hover:bg-blue-500\">Edit</button>\n            <button class=\"mr-1 px-2 py-1 bg-gray-400 rounded hover:bg-gray-500\">Duplicate</button>\n            <button class=\"px-2 py-1 bg-red-400 rounded hover:bg-red-500\">Report</button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n\n  <div class=\"mt-4 flex justify-between\">\n    <button\n      class=\"px-3 py-1 bg-gray-300 rounded hover:bg-gray-400\"\n      (click)=\"prevCardView()\"\n      [disabled]=\"cardViewStart === 0\"\n    >\n      < Prev\n    </button>\n    <button\n      class=\"px-3 py-1 bg-gray-300 rounded hover:bg-gray-400\"\n      (click)=\"nextCardView()\"\n      [disabled]=\"cardViewStart + 3 >= filteredCampaigns.length\"\n    >\n      Next >\n    </button>\n  </div>\n</div>\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { DashboardDataService } from '../../services/dashboard-data.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DashboardComponent implements OnInit {\n  channelData: any;\n  engagementMetrics: any;\n  budgetMetrics: any;\n  campaignEvents: any;\n  errorMessage: string = '';\n\n  startDate: string = '';\n  endDate: string = '';\n  maxDate: string = '';\n\n  kpiCards = [\n    { title: 'Total Revenue', value: '$1.2M', change: 5.4 },\n    { title: 'Campaign ROI', value: '350%', change: 3.2 },\n    { title: 'Messages Sent', value: '1.5M', change: -1.1 },\n    { title: 'Avg Conversion Rate', value: '4.5%', change: 0.8 }\n  ];\n\n  selectedCriteria: string = 'sent';\n  criteriaOptions = [\n    { label: 'Sent', value: 'sent' },\n    { label: 'Delivered', value: 'delivered' }\n  ];\n\n  channelChartData: any;\n  channelChartOptions: any;\n\n  constructor(private dashboardService: DashboardDataService) {}\n\n  ngOnInit() {\n    try {\n      this.channelData = this.dashboardService.getChannelPerformance();\n      this.engagementMetrics = this.dashboardService.getEngagementMetrics();\n      this.budgetMetrics = this.dashboardService.getBudgetMetrics();\n      this.campaignEvents = this.dashboardService.getCampaignEvents();\n\n      // Initialize date range to last 7 days\n      const today = new Date();\n      this.maxDate = today.toISOString().split('T')[0];\n      const priorDate = new Date().setDate(today.getDate() - 7);\n      this.startDate = new Date(priorDate).toISOString().split('T')[0];\n      this.endDate = this.maxDate;\n\n      this.updateChannelChart();\n    } catch (error) {\n      this.errorMessage = 'An error occurred while loading dashboard data.';\n      console.error(error);\n    }\n  }\n\n  updateChannelChart() {\n    if (!this.channelData) return;\n\n    const dataKey = this.selectedCriteria === 'sent' ? 'Sent' : 'Delivered';\n\n    this.channelChartData = {\n      labels: this.channelData.labels,\n      datasets: [\n        {\n          label: dataKey,\n          backgroundColor: this.selectedCriteria === 'sent' ? '#42A5F5' : '#66BB6A',\n          data:\n            this.selectedCriteria === 'sent'\n              ? this.channelData.datasets[0].data\n              : this.channelData.datasets[1].data\n        }\n      ]\n    };\n\n    this.channelChartOptions = {\n      indexAxis: 'y',\n      responsive: true,\n      plugins: {\n        legend: {\n          display: true,\n          position: 'top'\n        },\n        tooltip: {\n          enabled: true\n        }\n      },\n      scales: {\n        x: {\n          beginAtZero: true\n        }\n      }\n    };\n  }\n\n  onCriteriaChange() {\n    this.updateChannelChart();\n  }\n\n  getHeatmapColor(value: number): string {\n    if (value >= 75) {\n      return '#34D399'; // green\n    } else if (value >= 50) {\n      return '#FBBF24'; // yellow\n    } else {\n      return '#F87171'; // red\n    }\n  }\n\n  viewMode: 'card' | 'table' = 'card';\n  statusOptions = ['Active', 'Paused', 'Completed'];\n  selectedStatus: string = '';\n\n  cardViewStart: number = 0;\n\n  get filteredCampaigns() {\n    if (!this.campaignEvents) return [];\n    if (!this.selectedStatus) return this.campaignEvents;\n    return this.campaignEvents.filter((c: any) => c.status === this.selectedStatus);\n  }\n\n  setViewMode(mode: 'card' | 'table') {\n    this.viewMode = mode;\n  }\n\n  prevCardView() {\n    if (this.cardViewStart > 0) {\n      this.cardViewStart -= 1;\n    }\n  }\n\n  nextCardView() {\n    if (this.cardViewStart + 3 < this.filteredCampaigns.length) {\n      this.cardViewStart += 1;\n    }\n  }\n\n  onDateChange() {\n    // Validate date range max 15 days\n    if (this.startDate && this.endDate) {\n      const start = new Date(this.startDate);\n      const end = new Date(this.endDate);\n      const diffTime = Math.abs(end.getTime() - start.getTime());\n      const diffDays = diffTime / (1000 * 60 * 60 * 24);\n      if (diffDays > 15) {\n        alert('Date range cannot exceed 15 days.');\n        // Reset endDate to startDate + 15 days or today\n        const maxEnd = new Date(start);\n        maxEnd.setDate(start.getDate() + 15);\n        this.endDate = maxEnd > new Date() ? new Date().toISOString().split('T')[0] : maxEnd.toISOString().split('T')[0];\n      }\n    }\n    // TODO: Refresh data based on new date range\n  }\n\n  createCampaign() {\n    alert('Create Campaign button clicked!');\n    // TODO: Implement create campaign functionality\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}